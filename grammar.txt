<RESULT>    ::= <Chain>

<Chain>     ::= (<Statement> ";")*
<Statement> ::= <FuncCall> | <STDfunc> | <Return> | <IF> | <While> | <VarDecl> | <FuncDecl> | <Assign>

<IF>        ::= "if" "(" <Expr> ")" <Block> (<ELSE>)?
<ELSE>      ::= "else" <Block>

<While>     ::= "while" "(" <Expr> ")" <Block>

<VarDecl>   ::= "var" <ID>

<FuncDecl>  ::= "func" <ID> "(" <Var> ("," <Var>)* ")" <Block>
<Block>     ::= "begin" <Chain> "end"

<Assign>    ::= <Var> "=" <Expr>
<STDfunc>   ::= <Input> | <Output>

<Return>    ::= "return" <Expr>

<Input>     ::= "in"  "(" <Var> ")"
<Output>    ::= "out" "(" <Expr> ")"

<Expr>      ::= <AddSub> ((">" | "<") <AddSub>)*

<AddSub>    ::= <MulDiv> (("+" | "-") <MulDiv>)*
<MulDiv>    ::= <Power>  (("*" | "/") <Power>)*

<Power>     ::= <Primary> ("^" <Power>)?
<Primary>   ::= "(" <Expr> ")" | <MathFunc> | <FuncCall> | <Var> | <Number>

<FuncCall>  ::= <ID> "(" <Expr> ("," <Expr>)* ")"
<Var>	    ::= <ID>

<ID>	    ::= ([a-z] | "_") ([a-z] | [0-9] | "_")*
<Number>    ::= [0-9]+
<MathFunc>  ::= "sin" | "cos" | "tan" | "ln"
